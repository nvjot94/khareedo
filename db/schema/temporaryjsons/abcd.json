{
  domain: null,
  _events: { finish: [Function: bound resOnFinish
        ]
    },
  _eventsCount: 1,
  _maxListeners: undefined,
  output: [],
  outputEncodings: [],
  outputCallbacks: [],
  outputSize: 0,
  writable: true,
  _last: false,
  upgrading: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  _contentLength: null,
  _hasBody: true,
  _trailer: '',
  finished: false,
  _headerSent: false,
  socket:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        owner: [Circular
            ],
        onread: [Function: onread
            ],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true
        },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList
            ],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
        },
     readable: true,
     domain: null,
     _events: { end: [Array
            ],
        finish: [Function: onSocketFinish
            ],
        _socketEnd: [Function: onSocketEnd
            ],
        drain: [Array
            ],
        timeout: [Function: socketOnTimeout
            ],
        data: [Function: bound socketOnData
            ],
        error: [Function: socketOnError
            ],
        close: [Array
            ],
        resume: [Function: onSocketResume
            ],
        pause: [Function: onSocketPause
            ]
        },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite
            ],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object
            ]
        },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 243,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        domain: null,
        _events: [Object
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6: : : : 1234',
            [Symbol(asyncId)
            ]: 7
        },
     _server:
      Server {
        domain: null,
        _events: [Object
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6: : : : 1234',
            [Symbol(asyncId)
            ]: 7
        },
     _idleTimeout: 120000,
     _idleNext:
      TimersList {
        _idleNext: [Circular
            ],
        _idlePrev: [Circular
            ],
        _timer: [Timer
            ],
        _unrefed: true,
        msecs: 120000,
        nextTick: false
        },
     _idlePrev:
      TimersList {
        _idleNext: [Circular
            ],
        _idlePrev: [Circular
            ],
        _timer: [Timer
            ],
        _unrefed: true,
        msecs: 120000,
        nextTick: false
        },
     _idleStart: 315230,
     _destroyed: false,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders
            ],
        '1': [Function: parserOnHeadersComplete
            ],
        '2': [Function: parserOnBody
            ],
        '3': [Function: parserOnMessageComplete
            ],
        '4': [Function: bound onParserExecute
            ],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular
            ],
        incoming: [IncomingMessage
            ],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming
            ]
        },
     on: [Function: socketOnWrap
        ],
     _paused: false,
     read: [Function
        ],
     _consuming: true,
     _httpMessage: [Circular
        ],
        [Symbol(asyncId)
        ]: 831,
        [Symbol(bytesRead)
        ]: 0,
        [Symbol(asyncId)
        ]: 833,
        [Symbol(triggerAsyncId)
        ]: 7
    },
  connection:
   Socket {
     connecting: false,
     _hadError: false,
     _handle:
      TCP {
        reading: true,
        owner: [Circular
            ],
        onread: [Function: onread
            ],
        onconnection: null,
        writeQueueSize: 0,
        _consumed: true
        },
     _parent: null,
     _host: null,
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList
            ],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: false,
        endEmitted: false,
        reading: true,
        sync: false,
        needReadable: true,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
        },
     readable: true,
     domain: null,
     _events: { end: [Array
            ],
        finish: [Function: onSocketFinish
            ],
        _socketEnd: [Function: onSocketEnd
            ],
        drain: [Array
            ],
        timeout: [Function: socketOnTimeout
            ],
        data: [Function: bound socketOnData
            ],
        error: [Function: socketOnError
            ],
        close: [Array
            ],
        resume: [Function: onSocketResume
            ],
        pause: [Function: onSocketPause
            ]
        },
     _eventsCount: 10,
     _maxListeners: undefined,
     _writableState:
      WritableState {
        objectMode: false,
        highWaterMark: 16384,
        finalCalled: false,
        needDrain: false,
        ending: false,
        ended: false,
        finished: false,
        destroyed: false,
        decodeStrings: false,
        defaultEncoding: 'utf8',
        length: 0,
        writing: false,
        corked: 0,
        sync: false,
        bufferProcessing: false,
        onwrite: [Function: bound onwrite
            ],
        writecb: null,
        writelen: 0,
        bufferedRequest: null,
        lastBufferedRequest: null,
        pendingcb: 0,
        prefinished: false,
        errorEmitted: false,
        bufferedRequestCount: 0,
        corkedRequestsFree: [Object
            ]
        },
     writable: true,
     allowHalfOpen: true,
     _bytesDispatched: 243,
     _sockname: null,
     _pendingData: null,
     _pendingEncoding: '',
     server:
      Server {
        domain: null,
        _events: [Object
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6: : : : 1234',
            [Symbol(asyncId)
            ]: 7
        },
     _server:
      Server {
        domain: null,
        _events: [Object
            ],
        _eventsCount: 2,
        _maxListeners: undefined,
        _connections: 1,
        _handle: [TCP
            ],
        _usingWorkers: false,
        _workers: [],
        _unref: false,
        allowHalfOpen: true,
        pauseOnConnect: false,
        httpAllowHalfOpen: false,
        timeout: 120000,
        keepAliveTimeout: 5000,
        _pendingResponseData: 0,
        maxHeadersCount: null,
        _connectionKey: '6: : : : 1234',
            [Symbol(asyncId)
            ]: 7
        },
     _idleTimeout: 120000,
     _idleNext:
      TimersList {
        _idleNext: [Circular
            ],
        _idlePrev: [Circular
            ],
        _timer: [Timer
            ],
        _unrefed: true,
        msecs: 120000,
        nextTick: false
        },
     _idlePrev:
      TimersList {
        _idleNext: [Circular
            ],
        _idlePrev: [Circular
            ],
        _timer: [Timer
            ],
        _unrefed: true,
        msecs: 120000,
        nextTick: false
        },
     _idleStart: 315230,
     _destroyed: false,
     parser:
      HTTPParser {
        '0': [Function: parserOnHeaders
            ],
        '1': [Function: parserOnHeadersComplete
            ],
        '2': [Function: parserOnBody
            ],
        '3': [Function: parserOnMessageComplete
            ],
        '4': [Function: bound onParserExecute
            ],
        _headers: [],
        _url: '',
        _consumed: true,
        socket: [Circular
            ],
        incoming: [IncomingMessage
            ],
        outgoing: null,
        maxHeaderPairs: 2000,
        onIncoming: [Function: bound parserOnIncoming
            ]
        },
     on: [Function: socketOnWrap
        ],
     _paused: false,
     read: [Function
        ],
     _consuming: true,
     _httpMessage: [Circular
        ],
        [Symbol(asyncId)
        ]: 831,
        [Symbol(bytesRead)
        ]: 0,
        [Symbol(asyncId)
        ]: 833,
        [Symbol(triggerAsyncId)
        ]: 7
    },
  _header: null,
  _onPendingData: [Function: bound updateOutgoingData
    ],
  _sent100: false,
  _expect_continue: false,
  req:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: [BufferList
            ],
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: false,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: false,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: false,
        decoder: null,
        encoding: null
        },
     readable: false,
     domain: null,
     _events: { readable: [Function: bound
            ]
        },
     _eventsCount: 1,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP
            ],
        _parent: null,
        _host: null,
        _readableState: [ReadableState
            ],
        readable: true,
        domain: null,
        _events: [Object
            ],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [WritableState
            ],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 243,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server
            ],
        _server: [Server
            ],
        _idleTimeout: 120000,
        _idleNext: [TimersList
            ],
        _idlePrev: [TimersList
            ],
        _idleStart: 315230,
        _destroyed: false,
        parser: [HTTPParser
            ],
        on: [Function: socketOnWrap
            ],
        _paused: false,
        read: [Function
            ],
        _consuming: true,
        _httpMessage: [Circular
            ],
            [Symbol(asyncId)
            ]: 831,
            [Symbol(bytesRead)
            ]: 0,
            [Symbol(asyncId)
            ]: 833,
            [Symbol(triggerAsyncId)
            ]: 7
        },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP
            ],
        _parent: null,
        _host: null,
        _readableState: [ReadableState
            ],
        readable: true,
        domain: null,
        _events: [Object
            ],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [WritableState
            ],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 243,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server
            ],
        _server: [Server
            ],
        _idleTimeout: 120000,
        _idleNext: [TimersList
            ],
        _idlePrev: [TimersList
            ],
        _idleStart: 315230,
        _destroyed: false,
        parser: [HTTPParser
            ],
        on: [Function: socketOnWrap
            ],
        _paused: false,
        read: [Function
            ],
        _consuming: true,
        _httpMessage: [Circular
            ],
            [Symbol(asyncId)
            ]: 831,
            [Symbol(bytesRead)
            ]: 0,
            [Symbol(asyncId)
            ]: 833,
            [Symbol(triggerAsyncId)
            ]: 7
        },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers: { host: 'localhost: 1234',
        connection: 'keep-alive',
        'content-length': '36472',
        accept: 'application/json, text/plain, */*',
        origin: 'http: //localhost:1234',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36',
        'content-type': 'multipart/form-data; boundary=----WebKitFormBoundarylAemFTzwtyBfFG6v',
        dnt: '1',
        referer: 'http: //localhost:1234/demo.html',
        'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7',
        cookie: '_ga=GA1.1.736755625.1515923959'
        },
     rawHeaders: [ 'Host',
        'localhost: 1234',
        'Connection',
        'keep-alive',
        'Content-Length',
        '36472',
        'Accept',
        'application/json, text/plain, */*',
        'Origin',
        'http: //localhost:1234',
        'User-Agent',
        'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.167 Safari/537.36',
        'Content-Type',
        'multipart/form-data; boundary=----WebKitFormBoundarylAemFTzwtyBfFG6v',
        'DNT',
        '1',
        'Referer',
        'http: //localhost:1234/demo.html',
        'Accept-Encoding',
        'gzip, deflate, br',
        'Accept-Language',
        'en-IN,en-GB;q=0.9,en-US;q=0.8,en;q=0.7',
        'Cookie',
        '_ga=GA1.1.736755625.1515923959'
        ],
     trailers: {},
     rawTrailers: [],
     upgrade: false,
     url: '/imageupload',
     method: 'POST',
     statusCode: null,
     statusMessage: null,
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP
            ],
        _parent: null,
        _host: null,
        _readableState: [ReadableState
            ],
        readable: true,
        domain: null,
        _events: [Object
            ],
        _eventsCount: 10,
        _maxListeners: undefined,
        _writableState: [WritableState
            ],
        writable: true,
        allowHalfOpen: true,
        _bytesDispatched: 243,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: [Server
            ],
        _server: [Server
            ],
        _idleTimeout: 120000,
        _idleNext: [TimersList
            ],
        _idlePrev: [TimersList
            ],
        _idleStart: 315230,
        _destroyed: false,
        parser: [HTTPParser
            ],
        on: [Function: socketOnWrap
            ],
        _paused: false,
        read: [Function
            ],
        _consuming: true,
        _httpMessage: [Circular
            ],
            [Symbol(asyncId)
            ]: 831,
            [Symbol(bytesRead)
            ]: 0,
            [Symbol(asyncId)
            ]: 833,
            [Symbol(triggerAsyncId)
            ]: 7
        },
     _consuming: true,
     _dumped: false,
     next: [Function: next
        ],
     baseUrl: '',
     originalUrl: '/imageupload',
     _parsedUrl:
      Url {
        protocol: null,
        slashes: null,
        auth: null,
        host: null,
        port: null,
        hostname: null,
        hash: null,
        search: null,
        query: null,
        pathname: '/imageupload',
        path: '/imageupload',
        href: '/imageupload',
        _raw: '/imageupload'
        },
     params: {},
     query: {},
     res: [Circular
        ],
     body: {},
     route: Route { path: '/imageupload', stack: [Array
            ], methods: [Object
            ]
        },
     read: [Function
        ],
     file: { fieldname: 'file',
        originalname: '61WW2lVoSiL._SL1500_.jpg',
        encoding: '7bit',
        mimetype: 'image/jpeg',
        destination: './public/uploads/',
        filename: 'file-1519542388567.jpg',
        path: 'public\\uploads\\file-1519542388567.jpg',
        size: 36274
        }
    },
  locals: {},
    [Symbol(outHeadersKey)
    ]: { 'x-powered-by': [ 'X-Powered-By', 'Express'
        ],
     'access-control-allow-origin': [ 'Access-Control-Allow-Origin', 'http: //localhost:1234' ],
     'access-control-allow-headers': [ 'Access-Control-Allow-Headers',
        'Origin, X-Requested-With, Content-Type, Accept'
            ]
        }
    }